//=========================================================
// inc/InitDevice.h: generated by Hardware Configurator
//
// This file will be regenerated when saving a document.
// leave the sections inside the "$[...]" comment tags alone
// or they will be overwritten!
//=========================================================
#ifndef __INIT_DEVICE_H__
#define __INIT_DEVICE_H__

// USER CONSTANTS
// USER PROTOTYPES

// $[Mode Transition Prototypes]
extern void enter_DefaultMode_from_RESET(void);
// [Mode Transition Prototypes]$

// $[Config(Per-Module Mode)Transition Prototypes]
extern void PCA_0_enter_DefaultMode_from_RESET(void);
extern void VREG_0_enter_DefaultMode_from_RESET(void);
extern void PORTS_0_enter_DefaultMode_from_RESET(void);
extern void PORTS_1_enter_DefaultMode_from_RESET(void);
extern void PBCFG_0_enter_DefaultMode_from_RESET(void);
extern void RSTSRC_0_enter_DefaultMode_from_RESET(void);
extern void HFOSC_0_enter_DefaultMode_from_RESET(void);
extern void CLOCK_0_enter_DefaultMode_from_RESET(void);
extern void FLASH_0_enter_DefaultMode_from_RESET(void);
extern void TIMER01_0_enter_DefaultMode_from_RESET(void);
extern void TIMER16_2_enter_DefaultMode_from_RESET(void);
extern void TIMER_SETUP_0_enter_DefaultMode_from_RESET(void);
extern void ADC_0_enter_DefaultMode_from_RESET(void);
extern void UART_0_enter_DefaultMode_from_RESET(void);
extern void INTERRUPT_0_enter_DefaultMode_from_RESET(void);
extern void PORTS_0_enter_DefaultMode_from_RESET(void);
extern void UART_0_enter_DefaultMode_to_Normal(void) ;
extern void UART_0_enter_DefaultMode_to_Uart(void);
// [Config(Per-Module Mode)Transition Prototypes]$

extern void kick_adc(void);
extern int enable_adc(int adc);

void uart_send(char *buf, int count);
//void uart_receive(char *buf, int count);
//void uart_receive_phone();
int uart_receive_phone();

extern volatile int count_timer;

extern volatile unsigned int count;
//extern int uart_receive_timeout(char *buf, int count_uart,int timeout_ms);
extern int uart_receive_have_timeout(long timeout_ms);
extern int uart_receive_no_timeout();
extern void timer_sleepus_select(int para,int t);
extern void set_timer2(uint8_t us);
extern void stop_timer2();
//extern int adc_busy;
//extern unsigned int mV;

#define get_adc()   (mV)
#define clear_adc_busy()  adc_busy = 0
#define __is_adc_busy()  (adc_busy)
#define  kick_adc()    ADC0CN0 |= ADC0CN0_ADCM__ADBUSY

//#define ADC_CHANNEL_ID     0
//#define ADC_CHANNEL_VBAT   1
//#define ADC_CHANNEL_UNDEF  -1
extern int uart_receive_test();
//#define UART_ENABLE

#endif

